{"version":3,"sources":["js/context.js","js/components/Signin.js","js/components/Signup.js","js/components/AuthRoute.js","js/components/lib/card.js/cards.js","js/components/API/game.js","js/components/GameHandler.js","js/components/Game.js","js/constants.js","js/components/API/account.js","App.js","serviceWorker.js","index.js"],"names":["AppContext","React","createContext","ContextProvider","props","Provider","value","this","children","Component","ContextConsumer","Consumer","Signin","handleInputUsername","handleInputPassword","username","password","signin","signingIn","e","preventDefault","className","htmlFor","maxLength","type","name","onChange","onClick","to","Signup","signup","signingUp","minLength","AuthRoute","isSignedIn","cards","opt","cardSize","width","height","padding","animationSpeed","table","cardback","acesHigh","cardsUrl","blackJoker","redJoker","loop","zIndexCounter","all","start","end","mouseEvent","ev","card","$","data","container","handler","_click","func","call","context","window","shuffle","deck","i","length","j","Math","floor","random","tempi","tempj","Card","suit","rank","init","Container","Deck","options","Hand","Pile","prototype","shortName","toUpperCase","faceUp","el","css","position","cursor","addClass","appendTo","showCard","moveToFront","resize","size","toString","moveTo","x","y","speed","callback","top","left","animate","rotate","angle","xpos","ypos","hideCard","Array","extend","obj","prop","addCard","addCards","removeCard","push","splice","click","mousedown","_mousedown","mouseup","_mouseup","render","calcPosition","parseInt","targetTop","targetLeft","queue","immediate","me","flip","setTimeout","topCard","round","deal","count","hands","totalCount","dealOne","forEach","index","sort","temp","dealCounter","hasOwnProperty","l","on","SIZE","requestJoin","code","a","fetch","method","headers","Accept","response","json","responseJSON","status","message","gameHandler","JSON","parse","console","log","cmd","dealing","Game","state","isMelding","isLayingoff","isWaiting","isDrawing","isDiscarding","hasDrawn","hasDiscarded","tableName","lowerhand","upperhand","discardPile","meldPile","currentMeld","currentSelectedCardHand","currentSelectedCardDeck","currentSelectedCardDiscard","currentSelectedMeld","token","handRef","createRef","startGame","bind","handleMeld","handleLayoff","cancelMeldOrLayoff","sortHand","draw","discard","setGameState","joinGameWithCode","sendWSData","websocket","onopen","event","Cards","setState","onmessage","addEventListener","close","lobby","send","stringify","joinResponse","setErrorMessage","stateToSet","addtionalStates","pop","stopPropagation","startingGame","self","hide","cardToAdd","find","cardVal","cardInd","opcards","melds","meld","meldArr","newMeld","cardToLayoff","alert","validMeld","abs","hasGameStarted","disableMeldLayoffButton","id","style","display","disabled","SERVER_URL","SERVER_API","body","ok","Error","err","App","errorMsg","user","WebSocket","toggleLoading","validate","target","isLoading","path","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.cb1274db.chunk.js","sourcesContent":["\r\nimport React, { Component } from \"react\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\n/**\r\n * COntext is used to store the state of the application and pass it down\r\n * to components, using ContextConsumer\r\n *\r\n * @class ContextProvider\r\n * @extends {Component}\r\n */\r\nclass ContextProvider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <AppContext.Provider value={{\r\n        ...this.props.value\r\n      }}>\r\n        {this.props.children}\r\n      </AppContext.Provider>\r\n    );\r\n  }\r\n}\r\nconst ContextConsumer = AppContext.Consumer;\r\nexport { ContextProvider, ContextConsumer };","import React, { Component } from 'react';\r\nimport { ContextConsumer } from '../context';\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nconst Signin = ({ handleInputUsername, handleInputPassword, username, password, signin }) => {\r\n  const signingIn = (e) => {\r\n    e.preventDefault();\r\n    signin();\r\n  }\r\n  return (\r\n    <ContextConsumer>\r\n      {value =>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <h1>Welcome to Rummy</h1>\r\n          </div>\r\n          <div className=\"row\">\r\n            <h2>Signin</h2>\r\n          </div>\r\n          <div className=\"row\">\r\n            <form>\r\n              <div className=\"row w-100\">\r\n                <label htmlFor=\"username\">\r\n                  Username: &nbsp;\r\n                    <input  maxLength={50} type=\"text\" name=\"username\" value={username}\r\n                    onChange={handleInputUsername} />\r\n                </label>\r\n                <br />\r\n              </div>\r\n\r\n              <div className=\"row w-100\">\r\n                <label htmlFor=\"username\">\r\n                  Password: &nbsp;\r\n                  <input  maxLength={50} type=\"password\" name=\"password\" value={password}\r\n                    onChange={handleInputPassword} />\r\n                </label>\r\n                <br />\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <input type=\"submit\" value=\"Signin\" onClick={signingIn} />\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div>\r\n            <br />\r\n            <br />\r\n            <h4>Don't have an account yet?</h4>\r\n            <Link to=\"/signup\">Click here</Link>\r\n          </div>\r\n        </div>\r\n      }\r\n    </ContextConsumer>\r\n  );\r\n};\r\nexport default Signin;","import React, { Component } from 'react';\r\nimport { ContextConsumer } from '../context';\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nconst Signup = ({ handleInputUsername, handleInputPassword, username, password, signup }) => {\r\n  const signingUp = (e) => {\r\n    e.preventDefault();\r\n    signup();\r\n  }\r\n    return (\r\n      <ContextConsumer>\r\n        {value =>\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <h1>Welcome to Rummy</h1>\r\n            </div>\r\n            <div className=\"row\">\r\n              <h2>Signup</h2>\r\n            </div>\r\n            <div className=\"row\">\r\n              <form>\r\n                <div className=\"row w-100\">\r\n                  <label htmlFor=\"username\">\r\n                    Username: &nbsp;\r\n                    <input minLength={3} maxLength={50} type=\"text\" name=\"username\" value={username}\r\n                      onChange={handleInputUsername} />\r\n                  </label>\r\n                  <br />\r\n                </div>\r\n\r\n                <div className=\"row w-100\">\r\n                  <label htmlFor=\"username\">\r\n                    Password: &nbsp;\r\n                  <input minLength={5} maxLength={50} type=\"password\" name=\"password\" value={password}\r\n                      onChange={handleInputPassword} />\r\n                  </label>\r\n                  <br />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <input type=\"submit\" value=\"Signup\" onClick={signingUp}/>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div>\r\n              <br />\r\n              <br />\r\n              <h4>Already have an account?</h4>\r\n              <Link to=\"/\">Click here</Link>\r\n            </div>\r\n          </div>\r\n        }\r\n      </ContextConsumer>\r\n      )\r\n}\r\nexport default Signup;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router\";\r\n\r\n//HOC to redirect user to game if authenticated, to signin if not\r\nconst AuthRoute = props => {\r\n  const { isSignedIn, type } = props;\r\n  if (type === \"guest\" && isSignedIn) return <Redirect to=\"/game\" />;\r\n  else if (type === \"private\" && !isSignedIn) return <Redirect to=\"/\" />;\r\n\r\n  return <Route {...props} >\r\n  </Route>;\r\n};\r\n\r\nexport default AuthRoute;","import $ from \"jquery\";\r\n\r\nconst STANDARD = 0;\r\n\r\nvar cards = function() {\r\n  //The global options\r\n  var opt = {\r\n    cardSize: {\r\n      width: 69,\r\n      height: 94,\r\n      padding: 18\r\n    },\r\n    animationSpeed: 100,\r\n    table: 'body',\r\n    cardback: 'red',\r\n    acesHigh: false,\r\n    cardsUrl: 'img/cards.png',\r\n    blackJoker: false,\r\n    redJoker: false,\r\n    type: STANDARD,\r\n    loop: 1\r\n  };\r\n  var zIndexCounter = 1;\r\n  var all = []; //All the cards created.\r\n  var start = 1;\r\n  var end = start + 12;\r\n\r\n  function mouseEvent(ev) {\r\n    var card = $(this).data('card');\r\n    if (card.container) {\r\n      var handler = card.container._click;\r\n      if (handler) {\r\n        handler.func.call(handler.context || window, card, ev);\r\n      }\r\n    }\r\n  }\r\n\r\n  function init(options) {\r\n    if (options) {\r\n      for (var i in options) {\r\n        if (opt.hasOwnProperty(i)) {\r\n          opt[i] = options[i];\r\n        }\r\n      }\r\n    }\r\n\r\n    opt.acesHigh = false;\r\n    start = opt.acesHigh ? 2 : 1;\r\n    end = start + 12;\r\n\r\n\r\n    opt.table = $(opt.table)[0];\r\n    if ($(opt.table).css('position') == 'static') {\r\n      $(opt.table).css('position', 'relative');\r\n    }\r\n    for (let l = 0; l < opt.loop; l++)\r\n      for (var i = start; i <= end; i++) {\r\n        all.push(new Card('c', i, opt.table));\r\n        all.push(new Card('d', i, opt.table));\r\n        all.push(new Card('h', i, opt.table));\r\n        all.push(new Card('s', i, opt.table));\r\n      }\r\n    if (opt.blackJoker) {\r\n      all.push(new Card('bj', 0, opt.table));\r\n    }\r\n    if (opt.redJoker) {\r\n      all.push(new Card('rj', 0, opt.table));\r\n    }\r\n    \r\n    $('.card').on(\"click\", mouseEvent);\r\n    shuffle(all);\r\n  }\r\n\r\n  function shuffle(deck) {\r\n    //Fisher yates shuffle\r\n    var i = deck.length;\r\n    if (i == 0) return;\r\n    while (--i) {\r\n      var j = Math.floor(Math.random() * (i + 1));\r\n      var tempi = deck[i];\r\n      var tempj = deck[j];\r\n      deck[i] = tempj;\r\n      deck[j] = tempi;\r\n    }\r\n  }\r\n\r\n  function Card(suit, rank, table) {\r\n    this.init(suit, rank, table);\r\n  }\r\n\r\n  Card.prototype = {\r\n    init: function(suit, rank, table) {\r\n      this.shortName = suit + rank;\r\n      this.suit = suit;\r\n      this.rank = rank;\r\n      this.name = suit.toUpperCase() + rank;\r\n      this.faceUp = false;\r\n      this.el = $('<div/>').css({\r\n        width: opt.cardSize.width,\r\n        height: opt.cardSize.height,\r\n        \"background-image\": 'url(' + opt.cardsUrl + ')',\r\n        position: 'absolute',\r\n        cursor: 'pointer'\r\n      }).addClass('card').data('card', this).appendTo($(table));\r\n      this.showCard();\r\n      this.moveToFront();\r\n    },\r\n\r\n    resize: function (size) {\r\n      switch (size) {\r\n        case \"small\":\r\n          $(this.el).css({\r\n            width: 20,\r\n            height: 47\r\n          })\r\n          break;\r\n\r\n        case \"default\":\r\n          $(this.el).css({\r\n            width: opt.cardSize.width,\r\n            height: opt.cardSize.height\r\n          })\r\n          break;\r\n        default:\r\n\r\n          break;\r\n      }\r\n    },\r\n\r\n    toString: function() {\r\n      return this.name;\r\n    },\r\n\r\n    moveTo: function(x, y, speed, callback) {\r\n      var props = {\r\n        top: y - (opt.cardSize.height / 2),\r\n        left: x - (opt.cardSize.width / 2)\r\n      };\r\n      $(this.el).animate(props, speed || opt.animationSpeed, callback);\r\n    },\r\n\r\n    rotate: function(angle) {\r\n      $(this.el)\r\n        .css('-webkit-transform', 'rotate(' + angle + 'deg)')\r\n        .css('-moz-transform', 'rotate(' + angle + 'deg)')\r\n        .css('-ms-transform', 'rotate(' + angle + 'deg)')\r\n        .css('transform', 'rotate(' + angle + 'deg)')\r\n        .css('-o-transform', 'rotate(' + angle + 'deg)');\r\n    },\r\n\r\n    showCard: function() {\r\n      var offsets = {\r\n        \"c\": 0,\r\n        \"d\": 1,\r\n        \"h\": 2,\r\n        \"s\": 3,\r\n        \"rj\": 2,\r\n        \"bj\": 3\r\n      };\r\n      var xpos, ypos;\r\n      var rank = this.rank;\r\n      if (rank == 14) {\r\n        rank = 1; //Aces high must work as well.\r\n      }\r\n      xpos = -rank * opt.cardSize.width;\r\n      ypos = -offsets[this.suit] * opt.cardSize.height;\r\n      this.rotate(0);\r\n      $(this.el).css('background-position', xpos + 'px ' + ypos + 'px');\r\n    },\r\n\r\n    hideCard: function(position) {\r\n      var y = opt.cardback == 'red' ? 0 * opt.cardSize.height : -1 * opt.cardSize.height;\r\n      $(this.el).css('background-position', '0px ' + y + 'px');\r\n      this.rotate(0);\r\n    },\r\n\r\n    moveToFront: function() {\r\n      $(this.el).css('z-index', zIndexCounter++);\r\n    }\r\n  };\r\n\r\n  function Container() {\r\n\r\n  }\r\n\r\n  Container.prototype = new Array();\r\n  Container.prototype.extend = function(obj) {\r\n    for (var prop in obj) {\r\n      this[prop] = obj[prop];\r\n    }\r\n  }\r\n  Container.prototype.extend({\r\n    addCard: function(card) {\r\n      this.addCards([card]);\r\n    },\r\n\r\n    addCards: function(cards) {\r\n      for (var i = 0; i < cards.length; i++) {\r\n        var card = cards[i];\r\n        if (card.container) {\r\n          card.container.removeCard(card);\r\n        }\r\n        this.push(card);\r\n        card.container = this;\r\n      }\r\n    },\r\n\r\n    removeCard: function(card) {\r\n      for (var i = 0; i < this.length; i++) {\r\n        if (this[i] == card) {\r\n          this.splice(i, 1);\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n\r\n    init: function(options) {\r\n      options = options || {};\r\n      this.x = options.x || $(opt.table).width() / 2;\r\n      this.y = options.y || $(opt.table).height() / 2;\r\n      this.faceUp = options.faceUp;\r\n    },\r\n\r\n    click: function(func, context) {\r\n      this._click = {\r\n        func: func,\r\n        context: context\r\n      };\r\n    },\r\n\r\n    mousedown: function(func, context) {\r\n      this._mousedown = {\r\n        func: func,\r\n        context: context\r\n      };\r\n    },\r\n\r\n    mouseup: function(func, context) {\r\n      this._mouseup = {\r\n        func: func,\r\n        context: context\r\n      };\r\n    },\r\n\r\n    render: function(options) {\r\n      options = options || {};\r\n      var speed = options.speed || opt.animationSpeed;\r\n      this.calcPosition(options);\r\n      for (var i = 0; i < this.length; i++) {\r\n        var card = this[i];\r\n        zIndexCounter++;\r\n        card.moveToFront();\r\n        var top = parseInt($(card.el).css('top'));\r\n        var left = parseInt($(card.el).css('left'));\r\n        if (top != card.targetTop || left != card.targetLeft) {\r\n          var props = {\r\n            top: card.targetTop,\r\n            left: card.targetLeft,\r\n            queue: false\r\n          };\r\n          if (options.immediate) {\r\n            $(card.el).css(props);\r\n          } else {\r\n            $(card.el).animate(props, speed);\r\n          }\r\n        }\r\n      }\r\n      var me = this;\r\n      var flip = function() {\r\n        for (var i = 0; i < me.length; i++) {\r\n          if (me.faceUp) {\r\n            me[i].showCard();\r\n          } else {\r\n            me[i].hideCard();\r\n          }\r\n        }\r\n      }\r\n      if (options.immediate) {\r\n        flip();\r\n      } else {\r\n        setTimeout(flip, speed / 2);\r\n      }\r\n\r\n      if (options.callback) {\r\n        setTimeout(options.callback, speed);\r\n      }\r\n    },\r\n\r\n    topCard: function() {\r\n      return this[this.length - 1];\r\n    },\r\n\r\n    toString: function() {\r\n      return 'Container';\r\n    }\r\n  });\r\n\r\n  function Deck(options) {\r\n    this.init(options);\r\n  }\r\n\r\n  Deck.prototype = new Container();\r\n  Deck.prototype.extend({\r\n    calcPosition: function(options) {\r\n      options = options || {};\r\n      var left = Math.round(this.x - opt.cardSize.width / 2, 0);\r\n      var top = Math.round(this.y - opt.cardSize.height / 2, 0);\r\n      var condenseCount = 6;\r\n      for (var i = 0; i < this.length; i++) {\r\n        if (i > 0 && i % condenseCount == 0) {\r\n          top -= 1;\r\n          left -= 1;\r\n        }\r\n        this[i].targetTop = top;\r\n        this[i].targetLeft = left;\r\n      }\r\n    },\r\n\r\n    toString: function() {\r\n      return 'Deck';\r\n    },\r\n\r\n    deal: function(count, hands, speed, callback) {\r\n      var me = this;\r\n      var i = 0;\r\n      var totalCount = count * hands.length;\r\n\r\n      function dealOne() {\r\n        if (me.length == 0 || i == totalCount) {\r\n          if (callback) {\r\n            callback();\r\n          }\r\n          return;\r\n        }\r\n        hands[i % hands.length].addCard(me.topCard());\r\n        hands[i % hands.length].render({\r\n          callback: dealOne,\r\n          speed: speed\r\n        });\r\n        i++;\r\n      }\r\n      dealOne();\r\n    }\r\n  });\r\n\r\n  function Hand(options) {\r\n    this.init(options);\r\n  }\r\n  Hand.prototype = new Container();\r\n  Hand.prototype.extend({\r\n    calcPosition: function(options) {\r\n      options = options || {};\r\n      var width = opt.cardSize.width + (this.length - 1) * opt.cardSize.padding;\r\n      var left = Math.round(this.x - width / 2);\r\n      var top = Math.round(this.y - opt.cardSize.height / 2, 0);\r\n      for (var i = 0; i < this.length; i++) {\r\n        this[i].targetTop = top;\r\n        this[i].targetLeft = left + i * opt.cardSize.padding;\r\n      }\r\n    },\r\n    resize: function (size) {\r\n      switch (size) {\r\n        case \"small\":\r\n          this.forEach((card, index) => {\r\n            card.resize(\"small\");\r\n          });\r\n          break;\r\n        case \"default\":\r\n          this.forEach((card, index) => {\r\n            card.resize(\"default\");\r\n          });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    },\r\n\r\n    sort: function () {\r\n      for (var i=0; i<this.length-1; i++ ){\r\n        for (var j = 0; j < this.length - i - 1; j++)\r\n          if (this[j].suit < this[j+1].suit ||\r\n            (this[j].suit == this[j + 1].suit && this[j].rank < this[j + 1].rank)){\r\n              var temp = this[j];\r\n              this[j] = this[j + 1];\r\n              this[j + 1] = temp; \r\n            }\r\n      }\r\n    },\r\n\r\n    toString: function() {\r\n      return 'Hand';\r\n    }\r\n\r\n  });\r\n\r\n  function Pile(options) {\r\n    this.init(options);\r\n  }\r\n\r\n  Pile.prototype = new Container();\r\n  Pile.prototype.extend({\r\n    calcPosition: function(options) {\r\n      options = options || {};\r\n    },\r\n\r\n    toString: function() {\r\n      return 'Pile';\r\n    },\r\n\r\n    deal: function(count, hands) {\r\n      if (!this.dealCounter) {\r\n        this.dealCounter = count * hands.length;\r\n      }\r\n    }\r\n  });\r\n\r\n\r\n  return {\r\n    init: init,\r\n    all: all,\r\n    options: opt,\r\n    SIZE: opt.cardSize,\r\n    Card: Card,\r\n    Container: Container,\r\n    Deck: Deck,\r\n    Hand: Hand,\r\n    Pile: Pile,\r\n    shuffle: shuffle\r\n  };\r\n};\r\n\r\nexport default cards;\r\n","async function requestJoin(code) {\r\n  try {\r\n    let response = await fetch(\"https://localhost:3000/join/\" + code, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n      }\r\n    });\r\n    let responseJSON = await response.json();\r\n\r\n    if (response.status==500){\r\n      throw responseJSON.message\r\n    } \r\n    return responseJSON;\r\n  }\r\n  catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport { requestJoin }","\r\n\r\n//handle what happens when a cmd is received from the server\r\n//this refers to game.js\r\n//split up to avoid 1000s of lines of code\r\nfunction gameHandler(message){\r\n  let data = JSON.parse(message.data);\r\n  console.log(\"data from server\", data);\r\n\r\n  //initial setup with deck, discardPile and my hand\r\n  if (data.cmd === \"cards\") {\r\n    //setstate deck, discardPile, hand, op's hand\r\n    this.dealing(data);\r\n  } else if (data.cmd == \"click\") {\r\n\r\n  } else if (data.cmd == \"draw\") {\r\n\r\n  } else if (data.cmd == \"discard\") {\r\n\r\n  } else if (data.cmd == \"newmeld\") {\r\n\r\n  } else if (data.cmd == \"addmeld\") {\r\n\r\n  } else if (data.cmd == \"ping\") {\r\n\r\n  } else if (data.cmd == \"exit\") {\r\n\r\n  } else if (data.cmd == \"win\") {\r\n\r\n  } else if (data.cmd == \"loss\") {\r\n\r\n  }\r\n}\r\n\r\nexport default gameHandler;","import React, { Component, useRef } from \"react\";\r\n// import Deck from './Cards/lib/deck';\r\nimport Cards from './lib/card.js/cards';\r\nimport $ from 'jquery';\r\n\r\nimport { requestJoin } from \"../components/API/game\";\r\nimport gameHandler from \"./GameHandler\";\r\n\r\nexport default class Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isMelding: false, //(pick 3 cards to meld)\r\n      isLayingoff: false, //(add 1 card to 1 of the melds)\r\n      isWaiting: false, //(for server command, other player's turn...)\r\n      isDrawing: false, //(from deck or discard pile)\r\n      isDiscarding: false, //(remove 1 card from hand to discard pile),\r\n      hasDrawn: false,\r\n      hasDiscarded: false,\r\n      cards: null,\r\n      tableName: null,\r\n      deck: null,\r\n      lowerhand: null,\r\n      upperhand: null,\r\n      discardPile: null,\r\n      meldPile: null,\r\n      currentMeld: null,\r\n      currentSelectedCardHand: null,\r\n      currentSelectedCardDeck: null,\r\n      currentSelectedCardDiscard: null,\r\n      currentSelectedMeld: null,\r\n      //the game code to distinguish games, called lobby in server\r\n      code: \"\",\r\n      //randomly generated token from the server\r\n      token: \"\"\r\n    };\r\n\r\n    this.handRef = React.createRef();\r\n    this.startGame = this.startGame.bind(this);\r\n    this.handleMeld = this.handleMeld.bind(this);\r\n    this.handleLayoff = this.handleLayoff.bind(this);\r\n    this.cancelMeldOrLayoff = this.cancelMeldOrLayoff.bind(this);\r\n    this.dealing = this.dealing.bind(this);\r\n    this.sortHand = this.sortHand.bind(this);\r\n    this.draw = this.draw.bind(this);\r\n    this.discard = this.discard.bind(this);\r\n    this.setGameState = this.setGameState.bind(this);\r\n    this.joinGameWithCode = this.joinGameWithCode.bind(this);\r\n    this.sendWSData = this.sendWSData.bind(this);\r\n    this.gameHandler = gameHandler.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { websocket } = this.props;\r\n    //setup websocket events\r\n    websocket.onopen = (event) => {\r\n      console.log(\"Connected to server.\");\r\n    };\r\n\r\n    //starting an instance of card.js\r\n    var cards = Cards();\r\n    const tableName = '#card-table';\r\n\r\n    //Tell the library which element to use for the table\r\n    cards.init({ table: tableName });\r\n    this.setState({ cards, tableName });\r\n\r\n    websocket.onmessage = (message) => {\r\n      this.gameHandler(message);\r\n    };\r\n\r\n    window.addEventListener('beforeunload', () => { // Attempts to Close Socket before forced disconnect\r\n      if (websocket) websocket.close();\r\n    });\r\n  }\r\n\r\n  //used to send data to the server, as string\r\n  sendWSData(data) {\r\n    let { websocket } = this.props;\r\n    // console.log(\"WEBSOCKET\", websocket);\r\n    const { code, token } = this.state;\r\n    //always includes token and game code when sending data\r\n    data.lobby = code;\r\n    data.token = token;\r\n    // Send Data (as string)\r\n    websocket.send(JSON.stringify(data));\r\n  }\r\n\r\n  //setup websocket connection to the server\r\n  async joinGameWithCode(code = \"12345678979\") {\r\n    try {\r\n\r\n      //request to join a game with code typed in by user\r\n      let joinResponse = await requestJoin(code);\r\n\r\n      let token = joinResponse.token;\r\n      console.log(token);\r\n\r\n      this.setState({\r\n        code, token\r\n      });\r\n\r\n      //send request to join a game\r\n      this.sendWSData({ cmd: \"join\" });\r\n\r\n    } catch (error) {\r\n      console.log(\"An error occurs when trying to join: \", error);\r\n      this.props.setErrorMessage(\"An error occurs when trying to join \" + error);\r\n    }\r\n  }\r\n\r\n  discard() {\r\n    let { currentSelectedCardHand, isDiscarding, lowerhand, discardPile } = this.state;\r\n    if (isDiscarding) {\r\n      lowerhand.removeCard(currentSelectedCardHand);\r\n      discardPile.addCard(currentSelectedCardHand);\r\n      discardPile.render();\r\n      lowerhand.render();\r\n      this.setGameState(\"isWaiting\", { hasDiscarded: true, currentSelectedCardHand: null });\r\n      // this.setState({ hasDiscarded: true, currentSelectedCardHand: null });\r\n    }\r\n  }\r\n\r\n  setGameState(stateToSet, addtionalStates = {}, callback) {\r\n    this.setState({\r\n      isMelding: stateToSet == \"isMelding\" ? true : false, //(pick 3 cards to meld)\r\n      isLayingoff: stateToSet == \"isLayingoff\" ? true : false, //(add 1 card to 1 of the melds)\r\n      isWaiting: stateToSet == \"isWaiting\" ? true : false, //(for server command, other player's turn...)\r\n      isDrawing: stateToSet == \"isDrawing\" ? true : false, //(from deck or discard pile)\r\n      isDiscarding: stateToSet == \"isDiscarding\" ? true : false, //(remove 1 card from hand to discard pile),\r\n      ...addtionalStates\r\n    }, callback);\r\n  }\r\n\r\n  draw() {\r\n    let { isDrawing, deck, discardPile, lowerhand, currentSelectedCardDeck, currentSelectedCardDiscard } = this.state;\r\n    let self = this;\r\n    if (isDrawing) {\r\n      if (currentSelectedCardDeck != null) {\r\n        //if draw from deck\r\n        lowerhand.addCard(deck.topCard());\r\n        lowerhand.render();\r\n\r\n        self.setGameState(\"isDiscarding\", {\r\n          currentSelectedCardDeck: null,\r\n          currentSelectedCardDiscard: null,\r\n          hasDrawn: true\r\n        });\r\n      } else if (currentSelectedCardDiscard != null) {\r\n        //if draw from discard pile\r\n        lowerhand.addCard(discardPile.topCard());\r\n        lowerhand.render();\r\n\r\n        self.setGameState(\"isDiscarding\", {\r\n          currentSelectedCardDeck: null,\r\n          currentSelectedCardDiscard: null,\r\n          hasDrawn: true\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  cancelMeldOrLayoff() {\r\n    let { currentMeld, lowerhand, isMelding, isLayingoff } = this.state;\r\n    if (isMelding || isLayingoff) {\r\n      //return all cards from currentMeld to lowerhand\r\n      const length = currentMeld.length;\r\n      for (let i = 0; i < length; i++) {\r\n        let card = currentMeld.pop();\r\n        lowerhand.addCard(card);\r\n        currentMeld.removeCard(card);\r\n        lowerhand.render();\r\n        currentMeld.render();\r\n      }\r\n      this.setGameState(\"isDiscarding\", { currentSelectedCardHand: null });\r\n    }\r\n  }\r\n\r\n  sortHand() {\r\n    let { lowerhand } = this.state;\r\n    lowerhand.sort();\r\n    lowerhand.render();\r\n  }\r\n\r\n  startGame(e) {\r\n    if (e) {\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    }\r\n    this.props.startingGame();\r\n\r\n    console.log(\"Stating game\");\r\n    let { cards } = this.state;\r\n\r\n    //Create a new deck of cards\r\n    var deck = new cards.Deck();\r\n    //By default it's in the middle of the container, put it slightly to the side\r\n    deck.x -= 50;\r\n\r\n    //adding all cards to the deck\r\n    deck.addCards(cards.all);\r\n\r\n    //No animation here, just get the deck onto the table.\r\n    deck.render({ immediate: true });\r\n\r\n    //Now lets create a couple of hands, one face down, one face up.\r\n    var lowerhand = new cards.Hand({ faceUp: true, y: 340 });\r\n    var upperhand = new cards.Hand({ faceUp: false, y: 60 });\r\n\r\n    //Lets add a discard pile\r\n    var discardPile = new cards.Deck({ faceUp: true });\r\n    discardPile.x += 50;\r\n\r\n    var meldPile = [];\r\n\r\n    //this holds the 3 cards that user want to meld\r\n    //set it to slightly overlap the deck\r\n    var currentMeld = new cards.Hand({ faceUp: true, x: deck.x + 20, y: deck.y + 20 });\r\n\r\n    //setup click event, these will simply set the clicked card into state and call relevant event handler\r\n    let self = this;\r\n    lowerhand.click(function (card) {\r\n      if (self.state.isMelding) {\r\n        self.setState({ currentSelectedCardHand: card }, () => self.handleMeld());\r\n      }\r\n      if (self.state.isDiscarding) {\r\n        self.setState({ currentSelectedCardHand: card }, () => self.discard());\r\n      }\r\n      if (self.state.isLayingoff) {\r\n        self.setState({ currentSelectedCardHand: card }, () => self.handleLayoff());\r\n      }\r\n    });\r\n\r\n    deck.click(function (card) {\r\n      if (self.state.isDrawing)\r\n        self.setState({ currentSelectedCardDeck: card }, () => self.draw());\r\n\r\n    });\r\n\r\n    discardPile.click(function (card) {\r\n      if (self.state.isDrawing)\r\n        self.setState({ currentSelectedCardDiscard: card }, () => self.draw());\r\n    });\r\n\r\n    //saving state\r\n    this.setState({\r\n      cards,\r\n      deck,\r\n      lowerhand,\r\n      upperhand,\r\n      discardPile,\r\n      meldPile,\r\n      currentMeld\r\n    });\r\n\r\n    //setup websocket connection and handle it\r\n    this.joinGameWithCode(\"12131313\");\r\n\r\n  }\r\n\r\n  //setup the initial layout of the table\r\n  dealing(data) {\r\n    //data is from the server\r\n    console.log(\"dealing\");\r\n    //this is simply the animation, because the cards dealt is given by the server\r\n    const { cards, discardPile, deck, lowerhand, upperhand, meldPile } = this.state;\r\n    $('#deal').hide();\r\n\r\n    //adding cards that is in player's hand\r\n    for (let card of data.cards) {\r\n      let cardToAdd = cards.all.find(\r\n        (cardVal, cardInd) => {\r\n          return cardVal.suit == card.suit && cardVal.rank == card.rank\r\n        }\r\n        )\r\n      lowerhand.addCard(cardToAdd);\r\n    }\r\n\r\n    //adding cards in the discard pile\r\n    for (let card of data.discardPile) {\r\n      discardPile.addCard(cards.all.find((cardVal, cardInd) => cardVal.suit == card.suit && cardVal.rank == card.rank));\r\n    }\r\n\r\n    //dealing random cards to upperhand, don't care what they are\r\n    //the deck and upperhand has a random permutation of cards\r\n    //the player only knows what is in his hand and not in the deck or in upperhand\r\n    deck.deal(data.opcards, [upperhand], 100);\r\n\r\n    //adding melds\r\n    for (let meld of data.melds) {\r\n      //adding the cards in the current meld \r\n      let meldArr = [];\r\n      for (let card of meld) {\r\n        let cardToAdd = cards.all.find(\r\n          (cardVal, cardInd) => {\r\n            return cardVal.suit == card.suit && cardVal.rank == card.rank\r\n          });\r\n        meldArr.push(cardToAdd);\r\n      }\r\n\r\n      let newMeld = new cards.Hand({ faceUp: true, y: 1 });\r\n\r\n      const length = meldArr.length;\r\n      for (let i = 0; i < length; i++) {\r\n        let card = meldArr.pop();\r\n        newMeld.addCard(card);\r\n      }\r\n\r\n      newMeld.x = newMeld.x - 230;\r\n      newMeld.y = newMeld.y + (meldPile.length + 1) * 250 / 5;\r\n\r\n      let self = this;\r\n      newMeld.click(function (card) {\r\n        if (self.state.isLayingoff) {\r\n          self.setState({ currentSelectedMeld: newMeld }, () => self.handleLayoff());\r\n        }\r\n      });\r\n\r\n      meldPile.push(newMeld);\r\n      newMeld.resize(\"small\");\r\n      newMeld.render();\r\n    }\r\n    //now, render everything\r\n    deck.render();\r\n    discardPile.render();\r\n    lowerhand.render();\r\n    upperhand.render();\r\n\r\n    //allow drawing cards\r\n    this.setGameState(\"isDrawing\", null, () => this.draw());\r\n  }\r\n\r\n  handleLayoff() {\r\n    let { isLayingoff, currentMeld, lowerhand, currentSelectedCardHand, currentSelectedMeld } = this.state;\r\n    if (isLayingoff) {\r\n      //reuse currentMeld to store the laying off card\r\n      //in this usage, currentMeld should have only 1 card\r\n      if (currentMeld.length === 0) {\r\n        //no card yet\r\n        currentMeld.addCard(currentSelectedCardHand);\r\n        lowerhand.removeCard(currentSelectedCardHand);\r\n        currentMeld.sort();\r\n        lowerhand.render();\r\n        currentMeld.render();\r\n      } else if (currentMeld.length === 1) {\r\n        if (currentSelectedMeld != null) {\r\n          let card = currentMeld[0];//the only card inside currentMeld\r\n          //check if layoff card is valid for currentSelectedMeld\r\n          if ((currentSelectedMeld[0].suit === card.suit && currentSelectedMeld[0].rank - 1 === card.rank)\r\n            || (currentSelectedMeld[currentSelectedMeld.length - 1].suit === card.suit && currentSelectedMeld[currentSelectedMeld.length - 1].rank + 1 === card.rank)\r\n          ) {\r\n            //if the card is same suit and less than 1 from the first card in meld, or greater than 1 from the last card in meld\r\n            let cardToLayoff = currentMeld.pop();\r\n            currentSelectedMeld.addCard(cardToLayoff);\r\n            currentMeld.removeCard(cardToLayoff);\r\n            currentSelectedMeld.resize(\"small\");\r\n            currentSelectedMeld.render();\r\n            currentMeld.render();\r\n\r\n            this.setState({ currentSelectedCardHand: null, currentSelectedMeld: null }, () => setTimeout(() => this.setGameState(\"isDiscarding\"), 500));//avoid race condition with lowerhand.click event\r\n          }\r\n          else alert(\"Cannot layoff this card into this meld\");\r\n\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handleMeld() {\r\n\r\n    let validMeld = false;\r\n    let { cards, lowerhand, currentMeld, meldPile } = this.state;\r\n    let card = this.state.currentSelectedCardHand;\r\n\r\n    //if there are less then 3 cards, just add them to currentMeld\r\n    if (currentMeld.length < 2) {\r\n      currentMeld.addCard(card);\r\n      lowerhand.removeCard(card);\r\n      currentMeld.sort();\r\n      lowerhand.render();\r\n      currentMeld.render();\r\n    }\r\n    else if (currentMeld.length == 2) {\r\n      //currentMeld has 2 cards already, adding a third will perform a check\r\n      //if check is valid, add cards to the meld pile\r\n      currentMeld.addCard(card);\r\n      lowerhand.removeCard(card);\r\n      currentMeld.sort();\r\n      //three in a row, same suit\r\n      if (currentMeld[0].suit == currentMeld[1].suit && currentMeld[1].suit == currentMeld[2].suit) {\r\n        if (Math.abs(currentMeld[0].rank - currentMeld[1].rank) == 1\r\n          && Math.abs((currentMeld[1].rank - currentMeld[2].rank)) == 1) {\r\n          validMeld = true;\r\n        }\r\n      }\r\n      else {\r\n        //or three of same rank, diff suit\r\n        if ((currentMeld[0].rank) == currentMeld[1].rank && (currentMeld[1].rank) == currentMeld[2].rank) {\r\n          validMeld = true;\r\n        }\r\n      }\r\n      if (validMeld) {\r\n        //move the cards into meld pile, remove them from currentMeld\r\n        let newMeld = new cards.Hand({ faceUp: true, y: 1 });\r\n\r\n        const length = currentMeld.length;\r\n        for (let i = 0; i < length; i++) {\r\n          let card = currentMeld.pop();\r\n          newMeld.addCard(card);\r\n          currentMeld.removeCard(card);\r\n        }\r\n\r\n        newMeld.x = newMeld.x - 230;\r\n        newMeld.y = newMeld.y + (meldPile.length + 1) * 250 / 5;\r\n\r\n        let self = this;\r\n        newMeld.click(function (card) {\r\n          if (self.state.isLayingoff) {\r\n            self.setState({ currentSelectedMeld: newMeld }, () => self.handleLayoff());\r\n          }\r\n        });\r\n\r\n        meldPile.push(newMeld);\r\n        newMeld.resize(\"small\");\r\n        newMeld.render();\r\n        currentMeld.render();\r\n        this.setState({ currentSelectedCardHand: null }, () => setTimeout(() => this.setGameState(\"isDiscarding\"), 500));//avoid race condition with lowerhand.click event\r\n\r\n      }\r\n      else {\r\n        alert(\"meld not valid\");\r\n      }\r\n      lowerhand.render();\r\n      currentMeld.render();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { hasGameStarted } = this.props;\r\n    const { isMelding, hasDiscarded, hasDrawn, isWaiting, isLayingoff } = this.state;\r\n    const disableMeldLayoffButton = () => {\r\n      if (isWaiting) {\r\n        return true;\r\n      } else if (isMelding || isLayingoff) {\r\n        //or melding/layoff is in progress\r\n        return true;\r\n      }\r\n      else if (hasDrawn && !hasDiscarded) {\r\n        //if user has drawn a card but has not discard a card yet\r\n        return false;\r\n      }\r\n      return true;\r\n    };\r\n\r\n    const handref = <div id=\"hand\" ref={this.handRef} />;\r\n    return (\r\n      <div>\r\n        <p>Welcome to the game</p>\r\n        <button id=\"start-btn\" style={{ display: !hasGameStarted ? \"inline\" : \"none\" }}\r\n          onClick={this.startGame}>Start the game</button>\r\n        <div id=\"card-table\">\r\n          <button style={{ display: hasGameStarted ? \"block\" : \"none\" }}\r\n            id=\"deal\" onClick={this.dealing}>DEAL</button>\r\n\r\n          <button disabled={disableMeldLayoffButton()} style={{ display: hasGameStarted ? \"block\" : \"none\" }}\r\n            id=\"meld\"\r\n            onClick={() => this.setGameState(\"isMelding\")}\r\n          >Meld</button>\r\n\r\n          <button disabled={disableMeldLayoffButton()} style={{ display: hasGameStarted ? \"block\" : \"none\" }}\r\n            id=\"layoff\"\r\n            onClick={() => this.setGameState(\"isLayingoff\")}\r\n          >Layoff</button>\r\n\r\n          <button style={{ display: hasGameStarted & (isMelding || isLayingoff) ? \"block\" : \"none\" }}\r\n            id=\"cancel-meld\" onClick={this.cancelMeldOrLayoff}\r\n          >Cancel</button>\r\n\r\n          <button style={{ display: hasGameStarted ? \"block\" : \"none\" }}\r\n            id=\"sort-hand\" onClick={this.sortHand}\r\n          >Sort hand</button>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","const SERVER_URL = \"https://localhost:3000\";\r\n\r\nconst SERVER_API = {\r\n  SIGNIN: \"/user/signin\",\r\n  SIGNUP: \"/user/signup\",\r\n  SIGNOUT: \"/signout\"\r\n}\r\n\r\nexport { SERVER_URL, SERVER_API}","import {SERVER_URL, SERVER_API} from '../../constants';\r\n\r\nasync function getServerMessage() {\r\n  try {\r\n    let response = await fetch(\"https://localhost:3000/welcome\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n      }\r\n    });\r\n    console.log(response);\r\n    let responseJSON = await response.json();\r\n    console.log(responseJSON)\r\n    return responseJSON;\r\n} \r\ncatch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function signin(username, password){\r\n  try {\r\n    let response = await fetch(SERVER_URL + SERVER_API.SIGNIN, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n      },\r\n      body: JSON.stringify({\r\n        username: username,\r\n        password: password\r\n      })\r\n    });\r\n    let responseJSON = await response.json();\r\n    if (response.status !== 200 && response.ok === false) {\r\n      throw new Error(responseJSON.err.message);\r\n    } else {\r\n      return responseJSON;\r\n    }\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function signup(username, password) {\r\n  try {\r\n    let response = await fetch(SERVER_URL + SERVER_API.SIGNUP, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n      },\r\n      body: JSON.stringify({\r\n        username: username,\r\n        password: password\r\n      })\r\n    });\r\n    let responseJSON = await response.json();\r\n    if (response.status != 200 && response.ok == false) {\r\n      throw new Error(responseJSON.err.message);\r\n    } else {\r\n      return responseJSON;\r\n    }\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport { signin, signup }","import React, { Component } from 'react';\nimport { ContextProvider } from \"./js/context\";\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport Signin from \"./js/components/Signin\";\nimport Signup from './js/components/Signup';\nimport AuthRoute from \"./js/components/AuthRoute\";\nimport Game from \"./js/components/Game\";\n\nimport { signin, signup } from './js/components/API/account';\n\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: \"Hello from context store\",\n      errorMsg: \"\",\n      username: \"\",\n      password: \"\",\n      // token: \"\",\n      // user: null//the user info object\n      user: \"\",\n      token: \"\",\n      hasGameStarted: false,\n      websocket: new WebSocket(\"wss://localhost:3000\")\n    };\n    this.toggleLoading = this.toggleLoading.bind(this);\n    this.signin = this.signin.bind(this);\n    this.signup = this.signup.bind(this);\n    this.validate = this.validate.bind(this);\n    this.handleInputUsername = this.handleInputUsername.bind(this);\n    this.handleInputPassword = this.handleInputPassword.bind(this);\n    this.setErrorMessage = this.setErrorMessage.bind(this);\n    this.startingGame = this.startingGame.bind(this);\n\n  }\n\n  componentWillUnmount() {\n    if (this.state.websocket) {\n      this.state.websocket.close();\n    }\n  }\n\n  startingGame(){\n    this.setState({\n      hasGameStarted: true\n    })\n  }\n  handleInputUsername(event) {\n    this.setState({ username: event.target.value });\n  }\n\n  handleInputPassword(event) {\n    this.setState({ password: event.target.value });\n  }\n  setErrorMessage(message) {\n    this.setState({ errorMsg: message });\n  }\n\n  async signin() {\n    this.setState({ isLoading: true, errorMsg: \"\" });\n    try {\n      if (!this.validate()) {\n        this.setErrorMessage(\"Username or password is invalid. Please try again.\");\n        return;\n      }\n\n      //message will probably be a token, save it\n      let response = await signin(this.state.username, this.state.password);\n      this.setState({\n        token: response.token,\n        user: response.user\n      });\n\n    } catch (error) {\n      this.setErrorMessage(error.message);\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  async signup() {\n    this.setState({ isLoading: true, errorMsg: \"\" });\n    try {\n      if (!this.validate()) {\n        this.setErrorMessage(\"Username or password is invalid. Please try again.\");\n        return;\n      }\n\n      //message will probably be a token, save it\n      let response = await signup(this.state.username, this.state.password);\n      this.setState({\n        token: response.token,\n        user: response.user\n      });\n\n    } catch (error) {\n      this.setErrorMessage(error.message);\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  validate() {\n    const { username, password } = this.state;\n\n    //validate, if valid, send to server\n    if (username.length > 50 || password.length > 50) {\n      return false; //alert(\"Email or password is invalid. Please try again.\");\n    }\n    else return true;\n  }\n\n\n  toggleLoading() {\n    //toggle the spinning icon \n  }\n  render() {\n    const { errorMsg, username, password, user, token, hasGameStarted, websocket } = this.state;\n    const isSignedIn = user !== null && token !== \"\";\n    return (\n      <BrowserRouter>\n        <ContextProvider value={this.state}>\n          <div className=\"App\">\n            <div className=\"error-message\">\n              {errorMsg ? errorMsg : null}\n\n            </div>\n            <Switch>\n              <AuthRoute isSignedIn={isSignedIn} type=\"guest\" path=\"/signup\">\n                <Signup signup={this.signup} handleInputUsername={this.handleInputUsername}\n                  handleInputPassword={this.handleInputPassword}\n                  username={username} password={password}/>\n              </AuthRoute>\n              \n              <AuthRoute isSignedIn={isSignedIn} type=\"private\" path=\"/game\">\n                <Game hasGameStarted={hasGameStarted} \n                  startingGame={this.startingGame} \n                  setErrorMessage={this.setErrorMessage}\n                  websocket={websocket}\n                  />\n              </AuthRoute>\n\n              <AuthRoute isSignedIn={isSignedIn} type=\"guest\" path=\"/\">\n                <Signin signin={this.signin} handleInputUsername={this.handleInputUsername}\n                  handleInputPassword={this.handleInputPassword}\n                  username={username} password={password}/>\n              </AuthRoute>\n\n              \n            </Switch>\n          </div>\n        </ContextProvider>\n      </BrowserRouter>\n    );\n  }\n\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}